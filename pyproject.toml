[project]
name = "niagads-pylib"
version = "0.0.1-alpha.0"
description = "a collection of python packages, classes, and utility functions in support of NIAGADS projects"
authors = [{ name = "fossilfriend", email = "egreenfest@gmail.com" }]
license = { text = "GNU GPLv3" }
readme = "README.md"
requires-python = ">=3.11,<4.0"

[tool.poetry]
homepage = "https://github.com/NIAGADS/niagads-pylib"
repository = "https://github.com/NIAGADS/niagads-pylib"
packages = [
    { include = "niagads/enums", from = "components" },
    { include = "niagads/exceptions", from = "components" },
    { include = "niagads/pd_dataframe", from = "components" },
    { include = "niagads/decorators", from = "components" },
    { include = "niagads/postgres_dbi", from = "components" },
    { include = "niagads/objects", from = "components" },
    { include = "niagads/chromosomes", from = "components" },
    { include = "niagads/excel_parser", from = "components" },
    { include = "niagads/variant_annotator", from = "components" },
    { include = "niagads/csv_parser", from = "components" },
    { include = "niagads/vcf_parser", from = "components" },
    { include = "niagads/vep_json_parser", from = "components" },
    { include = "niagads/adsp_annotation", from = "components" },
    { include = "niagads/metadata_validator", from = "components" },
    { include = "niagads/json_validator", from = "components" },
    { include = "niagads/csv_validator", from = "components" },
    { include = "niagads/logging_utils", from = "components" },
    { include = "niagads/list_utils", from = "components" },
    { include = "niagads/dict_utils", from = "components" },
    { include = "niagads/sys_utils", from = "components" },
    { include = "niagads/string_utils", from = "components" },
    { include = "niagads/numeric_utils", from = "components" },
    { include = "niagads/arg_parser", from = "components" },
    { include = "niagads/csv_triples_parser", from = "components" },
    { include = "niagads/metadata_validator_tool", from = "bases" },
]

[tool.poetry.dependencies]
openpyxl = "^3.1.5"
strenum = "^0.4.15"
aiohttp = "^3.11.16"
pandas = "^2.2.3"
python-dateutil = "^2.9.0.post0"
psycopg2-binary = "^2.9.10"
jsonschema = "^4.23.0"
asyncpg = "^0.30.0"
pydantic = "^2.11.1"

# wrapt for custom decorators
rdflib = "^7.1.4"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
isort = "^5.13.2"
mypy = "^1.8.0"
flake8 = "^7.0.0"
pytest = "^8.2.2"
sphinx = "^8.2.3"
sphinxawesome-theme = "^5.3.2"
sphinx-autodoc-annotation = "^1.0"
sphinx-autodoc-typehints = "^3.1.0"
autoclasstoc = "^1.7.0"
ipykernel = "^6.29.5"
sphinx-autobuild = "^2024.10.3"
sphinx-rtd-theme = "^3.0.2"
sphinx-autoapi = "^3.6.0"
pydocstyle = "^6.3.0"


[tool.isort]
profile = "black"

[tool.black]
# line-length = 80

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
addopts = "-vv"
