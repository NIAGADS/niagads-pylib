[project]
name = "niagads-pylib"
authors = [
    {name = "fossilfriend", email = "egreenfest@gmail.com"}
]
description = "a collection of python packages, classes, and utility functions in support of NIAGADS projects"
license = {text = "GNU GPLv3"}
readme = "README.md"
requires-python = ">=3.11,<4.0"
version = "0.0.1-alpha.0"

[tool.black]

[tool.isort]
profile = "black"

[tool.poetry]
homepage = "https://github.com/NIAGADS/niagads-pylib"
repository = "https://github.com/NIAGADS/niagads-pylib"
packages = [
    {from = "bases", include = "niagads/metadata_validator_tool"},
    {from = "bases", include = "niagads/open_access_advp_api"},
    {from = "bases", include = "niagads/open_access_filer_api"},
    {from = "bases", include = "niagads/open_access_genomics_api"},
    {from = "bases", include = "niagads/open_access_root_api"},
    {from = "components", include = "niagads/adsp_annotation"},
    {from = "components", include = "niagads/arg_parser"},
    {from = "components", include = "niagads/csv_parser"},
    {from = "components", include = "niagads/csv_triples_parser"},
    {from = "components", include = "niagads/csv_validator"},
    {from = "components", include = "niagads/decorators"},
    {from = "components", include = "niagads/dict_utils"},
    {from = "components", include = "niagads/enums"},
    {from = "components", include = "niagads/excel_parser"},
    {from = "components", include = "niagads/exceptions"},
    {from = "components", include = "niagads/genome"},
    {from = "components", include = "niagads/json_validator"},
    {from = "components", include = "niagads/list_utils"},
    {from = "components", include = "niagads/logging_utils"},
    {from = "components", include = "niagads/metadata_validator"},
    {from = "components", include = "niagads/numeric_utils"},
    {from = "components", include = "niagads/objects"},
    {from = "components", include = "niagads/open_access_api_cache_manager"},
    {from = "components", include = "niagads/open_access_api_configuration"},
    {from = "components", include = "niagads/open_access_api_data_models"},
    {from = "components", include = "niagads/open_access_api_database_managaer"},
    {from = "components", include = "niagads/open_access_api_database_session"},
    {from = "components", include = "niagads/open_access_api_enums"},
    {from = "components", include = "niagads/open_access_api_exception_handlers"},
    {from = "components", include = "niagads/open_access_api_memory_cache"},
    {from = "components", include = "niagads/open_access_api_parameters"},
    {from = "components", include = "niagads/open_access_api_response_configuration"},
    {from = "components", include = "niagads/open_access_api_response_models"},
    {from = "components", include = "niagads/open_access_api_types"},
    {from = "components", include = "niagads/pd_dataframe"},
    {from = "components", include = "niagads/postgres_dbi"},
    {from = "components", include = "niagads/string_utils"},
    {from = "components", include = "niagads/sys_utils"},
    {from = "components", include = "niagads/variant_annotator"},
    {from = "components", include = "niagads/vcf_parser"},
    {from = "components", include = "niagads/vep_json_parser"}
]

[tool.poetry.dependencies]
aiocache = {extras = ["redis"], version = "^0.12.3"}
aiohttp = {extras = ["speedups"], version = "^3.11.16"}
asyncpg = "^0.30.0"
fastapi = "^0.115.12"
fastapi-cors = "^0.0.6"
itsdangerous = "^2.2.0"
jsonschema = "^4.23.0"
nh3 = "^0.2.21"
openpyxl = "^3.1.5"
pandas = "^2.2.3"
psycopg2-binary = "^2.9.10"
pydantic = "^2.11.1"
pydantic-settings = "^2.8.1"
pyparsing = "^3.2.3"
python-dateutil = "^2.9.0.post0"
pyyaml = "^6.0.2"
rdflib = "^7.1.4"
sqlalchemy = "^2.0.40"
strenum = "^0.4.15"

[tool.poetry.group.dev.dependencies]
autoclasstoc = "^1.7.0"
black = "^24.4.2"
flake8 = "^7.0.0"
ipykernel = "^6.29.5"
isort = "^5.13.2"
lazydoc = "^1.0.1"
mypy = "^1.8.0"
pydocstyle = "^6.3.0"
pytest = "^8.2.2"
sphinx = "^8.2.3"
sphinx-autoapi = "^3.6.0"
sphinx-autobuild = "^2024.10.3"
sphinx-autodoc-annotation = "^1.0"
sphinx-autodoc-typehints = "^3.1.0"
sphinx-rtd-theme = "^3.0.2"
sphinxawesome-theme = "^5.3.2"

[tool.pytest.ini_options]
addopts = "-vv"

[tool.tomlsort]
all = true
in_place = true
spaces_indent_inline_array = 4

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
    "poetry-core>=2.0.0,<3.0.0"
]
